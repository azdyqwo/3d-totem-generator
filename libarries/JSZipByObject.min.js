// MIT License

// Copyright (c) 2023 Asaki Zuki

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

"use strict";const zipConvert=(e,t)=>{const o=(e,t)=>{for(const n of Object.keys(e)){const r=e[n];"object"==typeof r?r.length||"Blob"===r.constructor.name?t.file(n,r[0],{base64:!0}):t.folder(n,o(r,t.folder(n))):"string"==typeof r&&t.file(n,r)}return t};for(const n of Object.keys(e)){const r=e[n];"object"==typeof r?r.length||"Blob"===r.constructor.name?t.file(n,r[0],{base64:!0}):t.folder(n,o(r,t.folder(n))):"string"==typeof r&&t.file(n,r)}return t};class ObjectToZip{constructor(e){this.zip=zipConvert(e,new JSZip)}async generateAsync(){return this.zip.generateAsync({type:"blob"})}download(e="content.zip"){this.generateAsync().then(t=>HTML.downloadFile(t,e))}}